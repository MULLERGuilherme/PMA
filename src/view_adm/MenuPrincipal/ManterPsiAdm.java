/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package view_adm.MenuPrincipal;

import view.*;
import Validacoes.Deletar;
import Validacoes.Restaurar;
import Validacoes.Validar;

import java.awt.Toolkit;
import java.awt.event.KeyEvent;
import java.util.List;

import javax.swing.JOptionPane;
import javax.swing.JPanel;

import javax.swing.UIManager;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableColumnModel;
import javax.swing.table.TableRowSorter;

import model.bean.Paciente;
import model.bean.Psicologo;
import model.bean.Telefone;

import model.bean.Vw_TelefonesPsicologos;
import model.dao.ADMDAO;

import model.dao.PacienteDAO;
import model.dao.PsicologoDAO;
import model.dao.TelefoneDAO;
import model.dao.ViewsDAO;
import util.Util;

/**
 *
 * @author guimu
 */
public class ManterPsiAdm extends javax.swing.JFrame {

    private boolean telefones = false;
    private boolean fone2 = false;
    private int codigopsicologo = -1;

    //Paginacao
    int PAGE_SIZE = 5;
    double tableRowCount;
    int totalPages = 1;
    int currentPage = 1;
    int startRow = 0;

    public void getCount() {
        ADMDAO dao = new ADMDAO();
        if (JCBdeletados.getSelectedIndex() == 1) {
            tableRowCount = dao.getRowCountTableManterPsiAdm();
        } else {
            tableRowCount = dao.getRowCountTableManterPsi();
        }

        if (tableRowCount > 0) {
            totalPages = (int) Math.ceil(tableRowCount / PAGE_SIZE);

        }
        currentPage = 1;

    }

    public void getCountInit() {
        ADMDAO dao = new ADMDAO();

        tableRowCount = dao.getRowCountTableManterPsi();

        if (tableRowCount > 0) {
            totalPages = (int) Math.ceil(tableRowCount / PAGE_SIZE);

        }
        currentPage = 1;

    }

    public void getCountBusca(String Busca) {
        ADMDAO dao = new ADMDAO();
        if (JCBdeletados.getSelectedIndex() == 1) {
            tableRowCount = dao.getRowCountTableManterPsiAdm();
        } else {
            tableRowCount = dao.getRowCountTableManterPsi();
        }
        //System.out.println(tableRowCount);
        if (tableRowCount > 0) {
            totalPages = (int) Math.ceil(tableRowCount / PAGE_SIZE);

        }
        currentPage = 1;
    }

    public void getPageData(int pageNo) {

        currentPage = pageNo;
        ViewsDAO dao = new ViewsDAO();
        //calculate starting row for pagination
        startRow = PAGE_SIZE * (pageNo - 1);

        ReadJTablePag(startRow, PAGE_SIZE);

    }

    public void getPageDataBusca(int pageNo, String Busca) {

        currentPage = pageNo;

        //calculate starting row for pagination
        startRow = PAGE_SIZE * (pageNo - 1);

        ReadJTableBuscaPag(Busca, startRow, PAGE_SIZE);

    }

    public ManterPsiAdm() {
        this.getCountInit();

        initComponents();
        setIconImage(Toolkit.getDefaultToolkit().getImage(getClass().getResource("pmaiconemenor.png")));
        BtnVoltarPouco.setEnabled(false);
        BtnVoltarBastante.setEnabled(false);
//        BtnManterPaciente.setEnabled(false);
        DefaultTableModel dtmPacientes = (DefaultTableModel) JTPsicologos.getModel();
        BtnManterPsicologo.setEnabled(false);
        BtnVisuAlterarDados.setEnabled(false);
        BtnExcluirPsicologo.setEnabled(false);
        btnRestaurar.setVisible(false);
        TableColumnModel cmod = JTPsicologos.getColumnModel();
        cmod.removeColumn(cmod.getColumn(0));
        JTPsicologos.setRowSorter(new TableRowSorter(dtmPacientes));

        this.getPageData(1);
        SpinnerNumPaginas.setValue((int) currentPage);
        LabelQtdePaginas.setText("de " + totalPages);
        SpinnerLimite.setValue((int) PAGE_SIZE);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        ModalHelp = new javax.swing.JDialog();
        jPanel4 = new JPanel();
        jPanel5 = new javax.swing.JPanel();
        ModalAlterarSenha = new javax.swing.JDialog();
        jPanel6 = new JPanel();
        jLabel29 = new javax.swing.JLabel();
        jPanel7 = new javax.swing.JPanel();
        jLabel24 = new javax.swing.JLabel();
        txtSenha1 = new javax.swing.JPasswordField();
        jLabel26 = new javax.swing.JLabel();
        txtConfirmarSenha1 = new javax.swing.JPasswordField();
        chckMostrarSenha1 = new javax.swing.JCheckBox();
        BtnAlterar = new javax.swing.JButton();
        BtnCancelar7 = new javax.swing.JButton();
        ModalAlterarPsicologo = new javax.swing.JDialog();
        jPanel8 = new JPanel();
        LableCadstrarNovoPsicologo1 = new javax.swing.JLabel();
        jPanel9 = new javax.swing.JPanel();
        jLabel21 = new javax.swing.JLabel();
        txtNome3 = new javax.swing.JTextField();
        jLabel22 = new javax.swing.JLabel();
        txtEmail2 = new javax.swing.JTextField();
        jLabel23 = new javax.swing.JLabel();
        txtCRP1 = new javax.swing.JTextField();
        labeltelefone1 = new javax.swing.JLabel();
        TxtTelefone6 = new javax.swing.JTextField();
        LabelTelefone3 = new javax.swing.JLabel();
        BtnCadastrarPsicologo1 = new javax.swing.JButton();
        BtnCancelar6 = new javax.swing.JButton();
        TxtTelefone7 = new javax.swing.JTextField();
        LabelEsqueciSenha = new javax.swing.JLabel();
        ModalCadastrarPsicologo = new javax.swing.JDialog();
        jPanel2 = new JPanel();
        LableCadstrarNovoPsicologo = new javax.swing.JLabel();
        jPanel3 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        txtNome1 = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        txtEmail1 = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        txtCRP = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        txtLogin = new javax.swing.JTextField();
        jLabel15 = new javax.swing.JLabel();
        txtSenha = new javax.swing.JPasswordField();
        LabelConfirmarSenha = new javax.swing.JLabel();
        txtConfirmarSenha = new javax.swing.JPasswordField();
        chckMostrarSenha = new javax.swing.JCheckBox();
        labeltelefone = new javax.swing.JLabel();
        TxtTelefone1 = new javax.swing.JTextField();
        LabelTelefone2 = new javax.swing.JLabel();
        BtnCadastrarPsicologo = new javax.swing.JButton();
        BtnCancelar5 = new javax.swing.JButton();
        TxtTelefone5 = new javax.swing.JTextField();
        jPanel1 = new JPanel();
        PainelMeusDados = new javax.swing.JPanel();
        jButton2 = new javax.swing.JButton();
        jEImagePanel1 = new LIB.JEImagePanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        JTPsicologos = new javax.swing.JTable();
        PainelPaginacao = new javax.swing.JPanel();
        LabelLimite = new javax.swing.JLabel();
        SpinnerLimite = new javax.swing.JSpinner();
        BtnVoltarBastante = new javax.swing.JButton();
        BtnVoltarPouco = new javax.swing.JButton();
        LabelPagina = new javax.swing.JLabel();
        SpinnerNumPaginas = new javax.swing.JSpinner();
        LabelQtdePaginas = new javax.swing.JLabel();
        BtnAvancarPouco = new javax.swing.JButton();
        BtnAvancarBastante = new javax.swing.JButton();
        BtnHelp = new javax.swing.JButton();
        txtBusca = new javax.swing.JTextField();
        jLabel14 = new javax.swing.JLabel();
        btnBuscar = new javax.swing.JButton();
        JCBdeletados = new javax.swing.JComboBox<>();
        btnRestaurar = new javax.swing.JButton();
        BtnNovoPsicologo = new javax.swing.JButton();
        BtnVisuAlterarDados = new javax.swing.JButton();
        BtnExcluirPsicologo = new javax.swing.JButton();
        PainelMenu = new javax.swing.JPanel();
        BtnInicio = new javax.swing.JButton();
        BtnManterPaciente = new javax.swing.JButton();
        BtnManterConsulta = new javax.swing.JButton();
        BtnManterPsicologo = new javax.swing.JButton();
        BtnSair = new javax.swing.JButton();

        jPanel4.setBackground(new java.awt.Color(59, 131, 117));
        jPanel4.setForeground(new java.awt.Color(59, 131, 117));
        jPanel4.setPreferredSize(new java.awt.Dimension(1080, 89));

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 400, Short.MAX_VALUE)
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 89, Short.MAX_VALUE)
        );

        ModalHelp.getContentPane().add(jPanel4, java.awt.BorderLayout.NORTH);

        javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 400, Short.MAX_VALUE)
        );
        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 439, Short.MAX_VALUE)
        );

        ModalHelp.getContentPane().add(jPanel5, java.awt.BorderLayout.CENTER);

        jPanel6.setBackground(new java.awt.Color(59, 131, 117));
        jPanel6.setForeground(new java.awt.Color(59, 131, 117));
        jPanel6.setPreferredSize(new java.awt.Dimension(1080, 89));

        jLabel29.setFont(new java.awt.Font("Tahoma", 1, 36)); // NOI18N
        jLabel29.setForeground(new java.awt.Color(255, 255, 255));
        jLabel29.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel29.setText("Alterar Senha");

        javax.swing.GroupLayout jPanel6Layout = new javax.swing.GroupLayout(jPanel6);
        jPanel6.setLayout(jPanel6Layout);
        jPanel6Layout.setHorizontalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jLabel29, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        jPanel6Layout.setVerticalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jLabel29, javax.swing.GroupLayout.DEFAULT_SIZE, 89, Short.MAX_VALUE)
        );

        jLabel24.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel24.setText("Nova Senha");

        txtSenha1.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N

        jLabel26.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel26.setText("Confirme a Nova Senha");

        txtConfirmarSenha1.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N

        chckMostrarSenha1.setText("MostrarSenha");
        chckMostrarSenha1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                chckMostrarSenha1MouseClicked(evt);
            }
        });

        BtnAlterar.setBackground(new java.awt.Color(0, 112, 186));
        BtnAlterar.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        BtnAlterar.setForeground(new java.awt.Color(255, 255, 255));
        BtnAlterar.setText("Alterar");
        BtnAlterar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BtnAlterarActionPerformed(evt);
            }
        });

        BtnCancelar7.setBackground(new java.awt.Color(255, 153, 153));
        BtnCancelar7.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        BtnCancelar7.setForeground(new java.awt.Color(255, 255, 255));
        BtnCancelar7.setText("Cancelar");
        BtnCancelar7.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BtnCancelar7ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel7Layout = new javax.swing.GroupLayout(jPanel7);
        jPanel7.setLayout(jPanel7Layout);
        jPanel7Layout.setHorizontalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel7Layout.createSequentialGroup()
                .addGap(0, 37, Short.MAX_VALUE)
                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel26)
                    .addComponent(jLabel24)
                    .addComponent(txtSenha1, javax.swing.GroupLayout.PREFERRED_SIZE, 284, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                        .addComponent(chckMostrarSenha1)
                        .addComponent(txtConfirmarSenha1, javax.swing.GroupLayout.PREFERRED_SIZE, 282, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(36, 36, 36))
            .addGroup(jPanel7Layout.createSequentialGroup()
                .addGap(116, 116, 116)
                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(BtnCancelar7, javax.swing.GroupLayout.DEFAULT_SIZE, 127, Short.MAX_VALUE)
                    .addComponent(BtnAlterar, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel7Layout.setVerticalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel7Layout.createSequentialGroup()
                .addGap(26, 26, 26)
                .addComponent(jLabel24)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(txtSenha1, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel26)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(txtConfirmarSenha1, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(chckMostrarSenha1)
                .addGap(18, 18, 18)
                .addComponent(BtnAlterar, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(BtnCancelar7, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(36, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout ModalAlterarSenhaLayout = new javax.swing.GroupLayout(ModalAlterarSenha.getContentPane());
        ModalAlterarSenha.getContentPane().setLayout(ModalAlterarSenhaLayout);
        ModalAlterarSenhaLayout.setHorizontalGroup(
            ModalAlterarSenhaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel7, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(jPanel6, javax.swing.GroupLayout.DEFAULT_SIZE, 357, Short.MAX_VALUE)
        );
        ModalAlterarSenhaLayout.setVerticalGroup(
            ModalAlterarSenhaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(ModalAlterarSenhaLayout.createSequentialGroup()
                .addComponent(jPanel6, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, 0)
                .addComponent(jPanel7, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        jPanel8.setBackground(new java.awt.Color(59, 131, 117));
        jPanel8.setForeground(new java.awt.Color(59, 131, 117));
        jPanel8.setPreferredSize(new java.awt.Dimension(1080, 89));

        LableCadstrarNovoPsicologo1.setFont(new java.awt.Font("Tahoma", 1, 33)); // NOI18N
        LableCadstrarNovoPsicologo1.setForeground(new java.awt.Color(255, 255, 255));
        LableCadstrarNovoPsicologo1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        LableCadstrarNovoPsicologo1.setText("Alterar Dados de Psicólogo");

        javax.swing.GroupLayout jPanel8Layout = new javax.swing.GroupLayout(jPanel8);
        jPanel8.setLayout(jPanel8Layout);
        jPanel8Layout.setHorizontalGroup(
            jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(LableCadstrarNovoPsicologo1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        jPanel8Layout.setVerticalGroup(
            jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(LableCadstrarNovoPsicologo1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        ModalAlterarPsicologo.getContentPane().add(jPanel8, java.awt.BorderLayout.NORTH);

        jLabel21.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel21.setText("Nome");

        txtNome3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtNome3ActionPerformed(evt);
            }
        });
        txtNome3.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtNome3KeyTyped(evt);
            }
        });

        jLabel22.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel22.setText("Email");

        jLabel23.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel23.setText("CRP");

        txtCRP1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtCRP1ActionPerformed(evt);
            }
        });
        txtCRP1.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtCRP1KeyTyped(evt);
            }
        });

        labeltelefone1.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        labeltelefone1.setText("Telefone");

        TxtTelefone6.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                TxtTelefone6KeyTyped(evt);
            }
        });

        LabelTelefone3.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        LabelTelefone3.setText("Telefone (2)");

        BtnCadastrarPsicologo1.setBackground(new java.awt.Color(0, 112, 186));
        BtnCadastrarPsicologo1.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        BtnCadastrarPsicologo1.setForeground(new java.awt.Color(255, 255, 255));
        BtnCadastrarPsicologo1.setText("Alterar Dados");
        BtnCadastrarPsicologo1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BtnCadastrarPsicologo1ActionPerformed(evt);
            }
        });

        BtnCancelar6.setBackground(new java.awt.Color(255, 153, 153));
        BtnCancelar6.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        BtnCancelar6.setForeground(new java.awt.Color(255, 255, 255));
        BtnCancelar6.setText("Cancelar");
        BtnCancelar6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BtnCancelar6ActionPerformed(evt);
            }
        });

        TxtTelefone7.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                TxtTelefone7KeyTyped(evt);
            }
        });

        LabelEsqueciSenha.setText("Alterar Senha");
        LabelEsqueciSenha.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                LabelEsqueciSenhaMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                LabelEsqueciSenhaMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                LabelEsqueciSenhaMouseExited(evt);
            }
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                LabelEsqueciSenhaMouseReleased(evt);
            }
        });
        LabelEsqueciSenha.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                LabelEsqueciSenhaKeyPressed(evt);
            }
        });

        javax.swing.GroupLayout jPanel9Layout = new javax.swing.GroupLayout(jPanel9);
        jPanel9.setLayout(jPanel9Layout);
        jPanel9Layout.setHorizontalGroup(
            jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel9Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(BtnCancelar6)
                .addGap(171, 171, 171))
            .addGroup(jPanel9Layout.createSequentialGroup()
                .addGap(103, 103, 103)
                .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(LabelEsqueciSenha)
                    .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(labeltelefone1)
                        .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jLabel23)
                            .addComponent(txtEmail2, javax.swing.GroupLayout.DEFAULT_SIZE, 247, Short.MAX_VALUE)
                            .addComponent(jLabel22)
                            .addComponent(jLabel21)
                            .addComponent(txtCRP1)
                            .addComponent(txtNome3))
                        .addComponent(TxtTelefone6, javax.swing.GroupLayout.PREFERRED_SIZE, 247, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(LabelTelefone3)
                        .addComponent(TxtTelefone7, javax.swing.GroupLayout.PREFERRED_SIZE, 247, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(BtnCadastrarPsicologo1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 245, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(730, Short.MAX_VALUE))
        );
        jPanel9Layout.setVerticalGroup(
            jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel9Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel21)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(txtNome3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel22)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(txtEmail2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel23)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(txtCRP1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(labeltelefone1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(TxtTelefone6, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(LabelTelefone3)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(TxtTelefone7, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(29, 29, 29)
                .addComponent(LabelEsqueciSenha)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(BtnCadastrarPsicologo1, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(BtnCancelar6, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        ModalAlterarPsicologo.getContentPane().add(jPanel9, java.awt.BorderLayout.CENTER);

        jPanel2.setBackground(new java.awt.Color(59, 131, 117));
        jPanel2.setForeground(new java.awt.Color(59, 131, 117));
        jPanel2.setPreferredSize(new java.awt.Dimension(1080, 89));

        LableCadstrarNovoPsicologo.setFont(new java.awt.Font("Tahoma", 1, 33)); // NOI18N
        LableCadstrarNovoPsicologo.setForeground(new java.awt.Color(255, 255, 255));
        LableCadstrarNovoPsicologo.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        LableCadstrarNovoPsicologo.setText("Cadastrar Novo Psicólogo");

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(LableCadstrarNovoPsicologo, javax.swing.GroupLayout.DEFAULT_SIZE, 447, Short.MAX_VALUE)
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(LableCadstrarNovoPsicologo, javax.swing.GroupLayout.DEFAULT_SIZE, 89, Short.MAX_VALUE)
        );

        jLabel2.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel2.setText("Nome");

        txtNome1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtNome1ActionPerformed(evt);
            }
        });
        txtNome1.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtNome1KeyTyped(evt);
            }
        });

        jLabel3.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel3.setText("Email");

        jLabel4.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel4.setText("CRP");

        txtCRP.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtCRPActionPerformed(evt);
            }
        });
        txtCRP.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtCRPKeyTyped(evt);
            }
        });

        jLabel5.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel5.setText("Usuário");

        jLabel15.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel15.setText("Senha");

        LabelConfirmarSenha.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        LabelConfirmarSenha.setText("Confirmar Senha");

        chckMostrarSenha.setText("Mostar Senha");
        chckMostrarSenha.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                chckMostrarSenhaActionPerformed(evt);
            }
        });

        labeltelefone.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        labeltelefone.setText("Telefone");

        TxtTelefone1.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                TxtTelefone1KeyTyped(evt);
            }
        });

        LabelTelefone2.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        LabelTelefone2.setText("Telefone (2)");

        BtnCadastrarPsicologo.setBackground(new java.awt.Color(0, 112, 186));
        BtnCadastrarPsicologo.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        BtnCadastrarPsicologo.setForeground(new java.awt.Color(255, 255, 255));
        BtnCadastrarPsicologo.setText("Cadastrar");
        BtnCadastrarPsicologo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BtnCadastrarPsicologoActionPerformed(evt);
            }
        });

        BtnCancelar5.setBackground(new java.awt.Color(255, 153, 153));
        BtnCancelar5.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        BtnCancelar5.setForeground(new java.awt.Color(255, 255, 255));
        BtnCancelar5.setText("Cancelar");
        BtnCancelar5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BtnCancelar5ActionPerformed(evt);
            }
        });

        TxtTelefone5.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                TxtTelefone5KeyTyped(evt);
            }
        });

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGap(101, 101, 101)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(BtnCadastrarPsicologo, javax.swing.GroupLayout.PREFERRED_SIZE, 245, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(LabelTelefone2)
                            .addComponent(labeltelefone)
                            .addComponent(chckMostrarSenha)
                            .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                .addGroup(jPanel3Layout.createSequentialGroup()
                                    .addComponent(txtConfirmarSenha, javax.swing.GroupLayout.PREFERRED_SIZE, 247, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGap(2, 2, 2))
                                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(LabelConfirmarSenha)
                                    .addComponent(jLabel15)
                                    .addComponent(jLabel5)
                                    .addComponent(jLabel4)
                                    .addComponent(txtEmail1)
                                    .addComponent(jLabel3)
                                    .addComponent(jLabel2)
                                    .addComponent(txtLogin)
                                    .addComponent(txtCRP)
                                    .addComponent(txtNome1)
                                    .addComponent(txtSenha, javax.swing.GroupLayout.PREFERRED_SIZE, 247, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                .addComponent(TxtTelefone5, javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(TxtTelefone1, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 247, Short.MAX_VALUE))))
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGap(174, 174, 174)
                        .addComponent(BtnCancelar5)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(txtNome1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel3)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(txtEmail1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel4)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(txtCRP, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel5)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(txtLogin, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel15)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(txtSenha, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(LabelConfirmarSenha)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(txtConfirmarSenha, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(chckMostrarSenha)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(labeltelefone)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(TxtTelefone1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(LabelTelefone2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(TxtTelefone5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(13, 13, 13)
                .addComponent(BtnCadastrarPsicologo, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(BtnCancelar5, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(18, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout ModalCadastrarPsicologoLayout = new javax.swing.GroupLayout(ModalCadastrarPsicologo.getContentPane());
        ModalCadastrarPsicologo.getContentPane().setLayout(ModalCadastrarPsicologoLayout);
        ModalCadastrarPsicologoLayout.setHorizontalGroup(
            ModalCadastrarPsicologoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(ModalCadastrarPsicologoLayout.createSequentialGroup()
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, 447, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
            .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        ModalCadastrarPsicologoLayout.setVerticalGroup(
            ModalCadastrarPsicologoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(ModalCadastrarPsicologoLayout.createSequentialGroup()
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, 0)
                .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel1.setBackground(new java.awt.Color(59, 131, 117));
        jPanel1.setForeground(new java.awt.Color(59, 131, 117));
        jPanel1.setPreferredSize(new java.awt.Dimension(1080, 89));

        PainelMeusDados.setBackground(new java.awt.Color(102, 102, 102));

        jButton2.setBackground(new java.awt.Color(102, 102, 102));
        jButton2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/view/UserIconBranco90x90.png"))); // NOI18N
        jButton2.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jButton2MouseClicked(evt);
            }
        });
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout PainelMeusDadosLayout = new javax.swing.GroupLayout(PainelMeusDados);
        PainelMeusDados.setLayout(PainelMeusDadosLayout);
        PainelMeusDadosLayout.setHorizontalGroup(
            PainelMeusDadosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, PainelMeusDadosLayout.createSequentialGroup()
                .addGap(0, 270, Short.MAX_VALUE)
                .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE))
        );
        PainelMeusDadosLayout.setVerticalGroup(
            PainelMeusDadosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, PainelMeusDadosLayout.createSequentialGroup()
                .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addComponent(PainelMeusDados, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 1008, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addComponent(PainelMeusDados, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );

        getContentPane().add(jPanel1, java.awt.BorderLayout.NORTH);

        jEImagePanel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/view/spring-floral-watercolor-background-vector-green-with-leaf-illustration_53876-126350.jpg"))); // NOI18N

        JTPsicologos.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "ID", "Nome Completo", "CRP", "Email", "Telefone 1", "Telefone 2"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        JTPsicologos.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                JTPsicologosMouseClicked(evt);
            }
            public void mousePressed(java.awt.event.MouseEvent evt) {
                JTPsicologosMousePressed(evt);
            }
        });
        JTPsicologos.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                JTPsicologosKeyReleased(evt);
            }
        });
        jScrollPane1.setViewportView(JTPsicologos);

        PainelPaginacao.setOpaque(false);

        LabelLimite.setBackground(new java.awt.Color(204, 204, 204));
        LabelLimite.setText("Limite");

        SpinnerLimite.setModel(new javax.swing.SpinnerNumberModel(1, 1, 15, 1));
        SpinnerLimite.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                SpinnerLimiteStateChanged(evt);
            }
        });

        BtnVoltarBastante.setText("<<");
        BtnVoltarBastante.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BtnVoltarBastanteActionPerformed(evt);
            }
        });

        BtnVoltarPouco.setText("<");
        BtnVoltarPouco.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BtnVoltarPoucoActionPerformed(evt);
            }
        });

        LabelPagina.setBackground(new java.awt.Color(204, 204, 204));
        LabelPagina.setText("Página");

        SpinnerNumPaginas.setModel(new javax.swing.SpinnerNumberModel(1, 1, totalPages, 1));
        SpinnerNumPaginas.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                SpinnerNumPaginasStateChanged(evt);
            }
        });

        LabelQtdePaginas.setBackground(new java.awt.Color(204, 204, 204));
        LabelQtdePaginas.setText("de X");

        BtnAvancarPouco.setText(">");
        BtnAvancarPouco.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BtnAvancarPoucoActionPerformed(evt);
            }
        });

        BtnAvancarBastante.setText(">>");
        BtnAvancarBastante.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BtnAvancarBastanteActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout PainelPaginacaoLayout = new javax.swing.GroupLayout(PainelPaginacao);
        PainelPaginacao.setLayout(PainelPaginacaoLayout);
        PainelPaginacaoLayout.setHorizontalGroup(
            PainelPaginacaoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(PainelPaginacaoLayout.createSequentialGroup()
                .addContainerGap(67, Short.MAX_VALUE)
                .addComponent(LabelLimite)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(SpinnerLimite, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(BtnVoltarBastante)
                .addGap(18, 18, 18)
                .addComponent(BtnVoltarPouco)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(LabelPagina)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(SpinnerNumPaginas, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(LabelQtdePaginas)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(BtnAvancarPouco)
                .addGap(18, 18, 18)
                .addComponent(BtnAvancarBastante)
                .addGap(8, 8, 8))
        );
        PainelPaginacaoLayout.setVerticalGroup(
            PainelPaginacaoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, PainelPaginacaoLayout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addGroup(PainelPaginacaoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(SpinnerNumPaginas, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(LabelPagina, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(LabelQtdePaginas, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(BtnAvancarPouco)
                    .addComponent(BtnAvancarBastante)
                    .addComponent(BtnVoltarPouco)
                    .addComponent(BtnVoltarBastante)
                    .addComponent(SpinnerLimite, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(LabelLimite, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)))
        );

        BtnHelp.setIcon(new javax.swing.ImageIcon(getClass().getResource("/view/SimboloHelp.png"))); // NOI18N
        BtnHelp.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BtnHelpActionPerformed(evt);
            }
        });

        txtBusca.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtBuscaKeyPressed(evt);
            }
        });

        jLabel14.setText("Buscar:");

        btnBuscar.setText("Buscar");
        btnBuscar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBuscarActionPerformed(evt);
            }
        });

        JCBdeletados.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Exibindo Ativos", "Exibindo Deletados" }));
        JCBdeletados.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                JCBdeletadosActionPerformed(evt);
            }
        });

        btnRestaurar.setText("Restaurar");
        btnRestaurar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnRestaurarActionPerformed(evt);
            }
        });

        BtnNovoPsicologo.setBackground(new java.awt.Color(204, 204, 204));
        BtnNovoPsicologo.setText("Novo Psicologo");
        BtnNovoPsicologo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BtnNovoPsicologoActionPerformed(evt);
            }
        });

        BtnVisuAlterarDados.setBackground(new java.awt.Color(204, 204, 204));
        BtnVisuAlterarDados.setText("Visualizar/ Alterar Dados");
        BtnVisuAlterarDados.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BtnVisuAlterarDadosActionPerformed(evt);
            }
        });

        BtnExcluirPsicologo.setBackground(new java.awt.Color(204, 204, 204));
        BtnExcluirPsicologo.setText("Excluir");
        BtnExcluirPsicologo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BtnExcluirPsicologoActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jEImagePanel1Layout = new javax.swing.GroupLayout(jEImagePanel1);
        jEImagePanel1.setLayout(jEImagePanel1Layout);
        jEImagePanel1Layout.setHorizontalGroup(
            jEImagePanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jEImagePanel1Layout.createSequentialGroup()
                .addGap(111, 111, 111)
                .addGroup(jEImagePanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jEImagePanel1Layout.createSequentialGroup()
                        .addComponent(JCBdeletados, 0, 146, Short.MAX_VALUE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jLabel14)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtBusca, javax.swing.GroupLayout.PREFERRED_SIZE, 348, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnBuscar, javax.swing.GroupLayout.PREFERRED_SIZE, 153, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 714, Short.MAX_VALUE)
                    .addGroup(jEImagePanel1Layout.createSequentialGroup()
                        .addGap(0, 159, Short.MAX_VALUE)
                        .addComponent(PainelPaginacao, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(18, 18, 18)
                .addGroup(jEImagePanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jEImagePanel1Layout.createSequentialGroup()
                        .addGap(129, 129, 129)
                        .addComponent(BtnHelp, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(btnRestaurar, javax.swing.GroupLayout.PREFERRED_SIZE, 153, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jEImagePanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                        .addComponent(BtnExcluirPsicologo, javax.swing.GroupLayout.PREFERRED_SIZE, 153, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(BtnVisuAlterarDados, javax.swing.GroupLayout.PREFERRED_SIZE, 153, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(BtnNovoPsicologo, javax.swing.GroupLayout.PREFERRED_SIZE, 153, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jEImagePanel1Layout.setVerticalGroup(
            jEImagePanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jEImagePanel1Layout.createSequentialGroup()
                .addGroup(jEImagePanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jEImagePanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                        .addGroup(jEImagePanel1Layout.createSequentialGroup()
                            .addGap(50, 50, 50)
                            .addGroup(jEImagePanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(txtBusca, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(jLabel14)
                                .addComponent(JCBdeletados, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jEImagePanel1Layout.createSequentialGroup()
                            .addContainerGap()
                            .addComponent(BtnHelp, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addComponent(btnBuscar, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jEImagePanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jEImagePanel1Layout.createSequentialGroup()
                        .addComponent(BtnNovoPsicologo, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(BtnVisuAlterarDados, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(BtnExcluirPsicologo, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnRestaurar, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 472, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(PainelPaginacao, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(39, 39, 39))
        );

        getContentPane().add(jEImagePanel1, java.awt.BorderLayout.CENTER);

        PainelMenu.setBackground(new java.awt.Color(102, 102, 102));
        PainelMenu.setForeground(new java.awt.Color(102, 102, 102));

        BtnInicio.setBackground(new java.awt.Color(102, 102, 102));
        BtnInicio.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        BtnInicio.setForeground(new java.awt.Color(255, 255, 255));
        BtnInicio.setText("Início");
        BtnInicio.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BtnInicioActionPerformed(evt);
            }
        });

        BtnManterPaciente.setBackground(new java.awt.Color(102, 102, 102));
        BtnManterPaciente.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        BtnManterPaciente.setForeground(new java.awt.Color(255, 255, 255));
        BtnManterPaciente.setText("Pacientes");
        BtnManterPaciente.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BtnManterPacienteActionPerformed(evt);
            }
        });

        BtnManterConsulta.setBackground(new java.awt.Color(102, 102, 102));
        BtnManterConsulta.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        BtnManterConsulta.setForeground(new java.awt.Color(255, 255, 255));
        BtnManterConsulta.setText("Consultas");
        BtnManterConsulta.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BtnManterConsultaActionPerformed(evt);
            }
        });

        BtnManterPsicologo.setBackground(new java.awt.Color(102, 102, 102));
        BtnManterPsicologo.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        BtnManterPsicologo.setForeground(new java.awt.Color(255, 255, 255));
        BtnManterPsicologo.setText("Psicólogos");
        BtnManterPsicologo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BtnManterPsicologoActionPerformed(evt);
            }
        });

        BtnSair.setBackground(new java.awt.Color(102, 102, 102));
        BtnSair.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        BtnSair.setForeground(new java.awt.Color(255, 255, 255));
        BtnSair.setText("Sair");
        BtnSair.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BtnSairActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout PainelMenuLayout = new javax.swing.GroupLayout(PainelMenu);
        PainelMenu.setLayout(PainelMenuLayout);
        PainelMenuLayout.setHorizontalGroup(
            PainelMenuLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(BtnInicio, javax.swing.GroupLayout.DEFAULT_SIZE, 360, Short.MAX_VALUE)
            .addComponent(BtnManterPaciente, javax.swing.GroupLayout.DEFAULT_SIZE, 360, Short.MAX_VALUE)
            .addComponent(BtnManterConsulta, javax.swing.GroupLayout.DEFAULT_SIZE, 360, Short.MAX_VALUE)
            .addComponent(BtnManterPsicologo, javax.swing.GroupLayout.DEFAULT_SIZE, 360, Short.MAX_VALUE)
            .addComponent(BtnSair, javax.swing.GroupLayout.DEFAULT_SIZE, 360, Short.MAX_VALUE)
        );
        PainelMenuLayout.setVerticalGroup(
            PainelMenuLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(PainelMenuLayout.createSequentialGroup()
                .addComponent(BtnInicio, javax.swing.GroupLayout.PREFERRED_SIZE, 71, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, 0)
                .addComponent(BtnManterPaciente, javax.swing.GroupLayout.PREFERRED_SIZE, 71, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, 0)
                .addComponent(BtnManterConsulta, javax.swing.GroupLayout.PREFERRED_SIZE, 71, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, 0)
                .addComponent(BtnManterPsicologo, javax.swing.GroupLayout.PREFERRED_SIZE, 71, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, 0)
                .addComponent(BtnSair, javax.swing.GroupLayout.PREFERRED_SIZE, 71, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 368, Short.MAX_VALUE))
        );

        getContentPane().add(PainelMenu, java.awt.BorderLayout.LINE_START);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    public void ReadJTablePag(int start, int size) {

        DefaultTableModel model = (DefaultTableModel) JTPsicologos.getModel();

        model.setNumRows(0);
        ADMDAO vwdao = new ADMDAO();
        Object[] linha = null;
        String fones = null;
        String[] fones2 = null;
        if (JCBdeletados.getSelectedIndex() == 0) {
            for (Vw_TelefonesPsicologos vw : vwdao.fetchBySizeMPsi(start, size)) {
                fones = vw.getTelefone().getNumero();
                if (fones.contains(",")) {

                    fones2 = fones.split(",");
                    linha = new Object[]{
                        vw.getPsicologo().getCodPsicologo(),
                        vw.getPsicologo().getNome_completo(),
                        vw.getPsicologo().getCRP(),
                        vw.getPsicologo().getEmail(),
                        fones2[0],
                        fones2[1]
                    };
                } else {
                    linha = new Object[]{
                        vw.getPsicologo().getCodPsicologo(),
                        vw.getPsicologo().getNome_completo(),
                        vw.getPsicologo().getCRP(),
                        vw.getPsicologo().getEmail(),
                        vw.getTelefone().getNumero(),
                        null
                    };

                }
                model.addRow(linha);
                fones = null;
                fones2 = null;

            }
        } else {
            for (Vw_TelefonesPsicologos vw : vwdao.fetchBySizeMPsiAdm(start, size)) {
                fones = vw.getTelefone().getNumero();
                if (fones.contains(",")) {

                    fones2 = fones.split(",");
                    linha = new Object[]{
                        vw.getPsicologo().getCodPsicologo(),
                        vw.getPsicologo().getNome_completo(),
                        vw.getPsicologo().getCRP(),
                        vw.getPsicologo().getEmail(),
                        fones2[0],
                        fones2[1]
                    };
                } else {
                    linha = new Object[]{
                        vw.getPsicologo().getCodPsicologo(),
                        vw.getPsicologo().getNome_completo(),
                        vw.getPsicologo().getCRP(),
                        vw.getPsicologo().getEmail(),
                        vw.getTelefone().getNumero(),
                        null
                    };

                }
                model.addRow(linha);
                fones = null;
                fones2 = null;

            }
        }

    }

    public void clearNovo() {
        txtNome1.setText("");
        txtEmail1.setText("");
        txtCRP.setText("");
        txtLogin.setText("");
        txtSenha.setText("");
        txtConfirmarSenha.setText("");
        TxtTelefone1.setText("");
        TxtTelefone5.setText("");

    }

    public void clearAlterar() {
        txtNome3.setText("");
        txtEmail2.setText("");
        txtCRP1.setText("");

        TxtTelefone6.setText("");
        TxtTelefone7.setText("");

    }

//    public void ReadJTableBusca(String Busca) {
//
//        DefaultTableModel model = (DefaultTableModel) JTPacientes.getModel();
//
//        model.setNumRows(0);
//
//        ViewsDAO vwdao = new ViewsDAO();
//        Object[] linha = null;
//        String fones = null;
//        String[] fones2 = null;
//        for (Vw_TelefonesPacientes vw : vwdao.BuscaManterPacienteOA(Busca)) {
//            fones = vw.getTelefone().getNumero();
//            if (fones.contains(",")) {
//
//                fones2 = fones.split(",");
//                linha = new Object[]{
//                    vw.getPaciente().getCodPaciente(),
//                    vw.getPaciente().getNome_Completo(),
//                    vw.getPaciente().getEmail(),
//                    fones2[0],
//                    fones2[1]
//                };
//            } else {
//                linha = new Object[]{
//                    vw.getPaciente().getCodPaciente(),
//                    vw.getPaciente().getNome_Completo(),
//                    vw.getPaciente().getEmail(),
//                    vw.getTelefone().getNumero(),
//                    null
//                };
//
//            }
//            model.addRow(linha);
//            fones = null;
//            fones2 = null;
//
//        }
//    }
    public void ReadJTableBuscaPag(String Busca, int startrow, int size) {

        DefaultTableModel model = (DefaultTableModel) JTPsicologos.getModel();

        model.setNumRows(0);

        ADMDAO vwdao = new ADMDAO();
        Object[] linha = null;
        String fones = null;
        String[] fones2 = null;
        if (JCBdeletados.getSelectedIndex() == 0) {
            for (Vw_TelefonesPsicologos vw : vwdao.fetchBySizeBuscaMPsi(startrow, size, Busca)) {
                fones = vw.getTelefone().getNumero();
                if (fones.contains(",")) {

                    fones2 = fones.split(",");
                    linha = new Object[]{
                        vw.getPsicologo().getCodPsicologo(),
                        vw.getPsicologo().getNome_completo(),
                        vw.getPsicologo().getCRP(),
                        vw.getPsicologo().getEmail(),
                        fones2[0],
                        fones2[1]
                    };
                } else {
                    linha = new Object[]{
                        vw.getPsicologo().getCodPsicologo(),
                        vw.getPsicologo().getNome_completo(),
                        vw.getPsicologo().getCRP(),
                        vw.getPsicologo().getEmail(),
                        vw.getTelefone().getNumero(),
                        null
                    };

                }
                model.addRow(linha);
                fones = null;
                fones2 = null;

            }
        } else {
            for (Vw_TelefonesPsicologos vw : vwdao.fetchBySizeBuscaMPsiAdm(startrow, size, Busca)) {
                fones = vw.getTelefone().getNumero();
                if (fones.contains(",")) {

                    fones2 = fones.split(",");
                    linha = new Object[]{
                        vw.getPsicologo().getCodPsicologo(),
                        vw.getPsicologo().getNome_completo(),
                        vw.getPsicologo().getCRP(),
                        vw.getPsicologo().getEmail(),
                        fones2[0],
                        fones2[1]
                    };
                } else {
                    linha = new Object[]{
                        vw.getPsicologo().getCodPsicologo(),
                        vw.getPsicologo().getNome_completo(),
                        vw.getPsicologo().getCRP(),
                        vw.getPsicologo().getEmail(),
                        vw.getTelefone().getNumero(),
                        null
                    };

                }
                model.addRow(linha);
                fones = null;
                fones2 = null;

            }
        }

    }

    private void JTPsicologosMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_JTPsicologosMouseClicked
        // TODO add your handling code here:
        if (JTPsicologos.getSelectedRow() != -1) {
            int modelRow = JTPsicologos.convertRowIndexToModel(JTPsicologos.getSelectedRow());
            int value = (Integer) JTPsicologos.getModel().getValueAt(modelRow, 0);
            this.codigopsicologo = value;
        }
    }//GEN-LAST:event_JTPsicologosMouseClicked

    private void JTPsicologosKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_JTPsicologosKeyReleased
        // TODO add your handling code here:
        if (JTPsicologos.getSelectedRow() != -1) {
            int modelRow = JTPsicologos.convertRowIndexToModel(JTPsicologos.getSelectedRow());
            int value = (Integer) JTPsicologos.getModel().getValueAt(modelRow, 0);
            this.codigopsicologo = value;

        }
    }//GEN-LAST:event_JTPsicologosKeyReleased


    private void JTPsicologosMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_JTPsicologosMousePressed
        BtnVisuAlterarDados.setEnabled(true);
        BtnExcluirPsicologo.setEnabled(true);
        if (JCBdeletados.getSelectedIndex() == 1) {
            btnRestaurar.setEnabled(true);
        }
        if (evt.getClickCount() == 2) {
            if (JTPsicologos.getSelectedRow() != -1) {
                int modelRow = JTPsicologos.convertRowIndexToModel(JTPsicologos.getSelectedRow());
                int value = (Integer) JTPsicologos.getModel().getValueAt(modelRow, 0);

                ModalAlterarPsicologo.setSize(478, 612);
                ModalAlterarPsicologo.setModal(true);
                this.codigopsicologo = value;
                readpsicologo(value);
                ModalAlterarPsicologo.setLocationRelativeTo(null);
                ModalAlterarPsicologo.setVisible(true);

//            VisuPsicologoADM mp = new VisuPsicologoADM(value);
//            //Util.SizeJanela(mp);
//            mp.setVisible(true);
//            this.dispose();
//            int modelRow = JTPsicologos.convertRowIndexToModel(JTPsicologos.getSelectedRow());
//            int value = (Integer) JTPsicologos.getModel().getValueAt(modelRow, 0);
//            this.codigopaciente = value;
//            PacienteDAO dao = new PacienteDAO();
//            ViewsDAO vwdao = new ViewsDAO();
//            Paciente p = dao.ReadPaciente(codigopaciente);
//            Vw_TelefonesPacientes v = new Vw_TelefonesPacientes();
//            v = vwdao.ReadTelefonesPacientes(codigopaciente);
//            txtNome2.setText(p.getNome_Completo());
//            Date date = (Date) p.getDataNasc();
//
//            LocalDate localDate = date.toInstant().atZone( ZoneId.systemDefault() ).toLocalDate();
//            DataNasc3.setDate(date.toLocalDate());
//            DataNasc1.setDate((LocalDate) p.getDataNasc());
//            Sexo2.setSelectedItem(p.getSexo());
//            estadocivil2.setSelectedItem(p.getEstadoCivil());
//            TxtCidade2.setText(p.getCidade());
//            txtCPF2.setText(p.getCPF());
//            TxtEndereco2.setText(p.getEndereco());
//            TxtProfissao2.setText(p.getProfissao());
//            TxtReligiao2.setText(p.getReligiao());
//            TxtEscolaridade2.setText(p.getEscolaridade());
//            String fones = null;
//            String[] fones2 = null;
//            fones = v.getTelefone().getNumero();
//            if (fones.contains(",")) {
//                fones2 = fones.split(",");
//                TxtTelefone3.setText(fones2[0]);
//                TxtTelefone4.setText(fones2[1]);
//            } else {
//                TxtTelefone3.setText(fones);
//                TxtTelefone4.setText("");
//            }
//
//            txtEmail13.setText(p.getEmail());
//            LabelMsg.setVisible(false);
//            DataNasc3.setFont(new Font("Tahoma", Font.BOLD, 18));
//            ModalAlterar.setSize(950, 950);
//            ModalAlterar.setModal(true);
//            ModalAlterar.setLocationRelativeTo(null);
//            ModalAlterar.setVisible(true);
//
            } else {
                JOptionPane.showMessageDialog(this, "Selecione um Psicologo para alterar", "ERRO!", JOptionPane.ERROR_MESSAGE);
            }
        }
    }//GEN-LAST:event_JTPsicologosMousePressed

    private void jButton2MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButton2MouseClicked

    }//GEN-LAST:event_jButton2MouseClicked
    public void readpsicologo(int cod) {
        Psicologo p;
        PsicologoDAO dao = new PsicologoDAO();
        p = dao.ReadPsicologo(cod);
        codigopsicologo = p.getCodPsicologo();
        List<Telefone> t;
        TelefoneDAO tdao = new TelefoneDAO();
        t = tdao.ReadTPsicologo(p.getCodPsicologo());
        txtNome3.setText(p.getNome_completo());

        txtCRP1.setText(p.getCRP());
        txtEmail2.setText(p.getEmail());
        if (t.size() == 2) {
            TxtTelefone6.setText(t.get(0).getNumero());
            TxtTelefone7.setText(t.get(1).getNumero());
        } else {
            TxtTelefone6.setText(t.get(0).getNumero());

        }
    }
    private void BtnVoltarPoucoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BtnVoltarPoucoActionPerformed
        // TODO add your handling code here:
        if (currentPage != 1) { //diferente da 1 pagina
            if (txtBusca.getText() != "") {
                getPageDataBusca(currentPage - 1, txtBusca.getText());
                BtnAvancarPouco.setEnabled(true);
                    BtnAvancarBastante.setEnabled(true);
                    if (currentPage == 1) {
                        BtnVoltarPouco.setEnabled(false);
                        BtnVoltarBastante.setEnabled(false);  
                }
            } else {
                getPageData(currentPage - 1);
                BtnAvancarPouco.setEnabled(true);
                    BtnAvancarBastante.setEnabled(true);
                    if (currentPage == 1) {
                        BtnVoltarPouco.setEnabled(false);
                        BtnVoltarBastante.setEnabled(false);  
                }
            }

        }
        SpinnerNumPaginas.setValue((int) currentPage);
    }//GEN-LAST:event_BtnVoltarPoucoActionPerformed

    private void BtnAvancarBastanteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BtnAvancarBastanteActionPerformed
        // TODO add your handling code here:
        if (currentPage < totalPages) { //se tem pagina e é menor que a ultima
            if (txtBusca.getText() != "") {
                if (currentPage + 5 > totalPages) {
                    getPageDataBusca(totalPages, txtBusca.getText());
                     BtnVoltarPouco.setEnabled(true);
                    BtnVoltarBastante.setEnabled(true);
                    if (currentPage == totalPages) {
                        BtnAvancarPouco.setEnabled(false);
                        BtnAvancarBastante.setEnabled(false);  
                }
                } else {
                    getPageDataBusca(currentPage + 5, txtBusca.getText());
                     BtnVoltarPouco.setEnabled(true);
                    BtnVoltarBastante.setEnabled(true);
                    if (currentPage == totalPages) {
                        BtnAvancarPouco.setEnabled(false);
                        BtnAvancarBastante.setEnabled(false);  
                }
                }
            } else {
                if (currentPage + 5 > totalPages) {
                    getPageData(totalPages);
                     BtnVoltarPouco.setEnabled(true);
                    BtnVoltarBastante.setEnabled(true);
                    if (currentPage == totalPages) {
                        BtnAvancarPouco.setEnabled(false);
                        BtnAvancarBastante.setEnabled(false);  
                }
                } else {
                    getPageData(currentPage + 5);
                     BtnVoltarPouco.setEnabled(true);
                    BtnVoltarBastante.setEnabled(true);
                    if (currentPage == totalPages) {
                        BtnAvancarPouco.setEnabled(false);
                        BtnAvancarBastante.setEnabled(false);  
                }
                }
            }

        }
        SpinnerNumPaginas.setValue((int) currentPage);
    }//GEN-LAST:event_BtnAvancarBastanteActionPerformed

    private void BtnVoltarBastanteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BtnVoltarBastanteActionPerformed
        if (currentPage != 1) {
            if (txtBusca.getText() != "") {
                if (currentPage - 5 < 1) {
                    getPageDataBusca(1, txtBusca.getText());
                    BtnAvancarPouco.setEnabled(true);
                    BtnAvancarBastante.setEnabled(true);
                    if (currentPage == 1) {
                        BtnVoltarPouco.setEnabled(false);
                        BtnVoltarBastante.setEnabled(false);  
                }
                } else {
                    getPageDataBusca(currentPage - 5, txtBusca.getText());
                    BtnAvancarPouco.setEnabled(true);
                    BtnAvancarBastante.setEnabled(true);
                    if (currentPage == 1) {
                        BtnVoltarPouco.setEnabled(false);
                        BtnVoltarBastante.setEnabled(false);  
                }
                }

            } else {
                if (currentPage - 5 < 1) {
                    getPageData(1);
                    BtnAvancarPouco.setEnabled(true);
                    BtnAvancarBastante.setEnabled(true);
                    if (currentPage == 1) {
                        BtnVoltarPouco.setEnabled(false);
                        BtnVoltarBastante.setEnabled(false);  
                }
                } else {
                    getPageData(currentPage - 5);
                    BtnAvancarPouco.setEnabled(true);
                    BtnAvancarBastante.setEnabled(true);
                    if (currentPage == 1) {
                        BtnVoltarPouco.setEnabled(false);
                        BtnVoltarBastante.setEnabled(false);  
                }
                }
            }

        }
        SpinnerNumPaginas.setValue((int) currentPage);
    }//GEN-LAST:event_BtnVoltarBastanteActionPerformed

    private void BtnAvancarPoucoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BtnAvancarPoucoActionPerformed
        if (currentPage < totalPages) {
            if (txtBusca.getText() != "") {
                getPageDataBusca(currentPage + 1, txtBusca.getText());
                 BtnVoltarPouco.setEnabled(true);
                    BtnVoltarBastante.setEnabled(true);
                    if (currentPage == totalPages) {
                        BtnAvancarPouco.setEnabled(false);
                        BtnAvancarBastante.setEnabled(false);  
                }
            } else {
                getPageData(currentPage + 1);
                 BtnVoltarPouco.setEnabled(true);
                    BtnVoltarBastante.setEnabled(true);
                    if (currentPage == totalPages) {
                        BtnAvancarPouco.setEnabled(false);
                        BtnAvancarBastante.setEnabled(false);  
                }
            }

        }
        SpinnerNumPaginas.setValue((int) currentPage);
    }//GEN-LAST:event_BtnAvancarPoucoActionPerformed

    private void SpinnerLimiteStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_SpinnerLimiteStateChanged
        int npag1=totalPages;
        if (txtBusca.getText() != "") {
            PAGE_SIZE = (int) SpinnerLimite.getValue();
            getCountBusca(txtBusca.getText());
            SpinnerNumPaginas.setModel(new javax.swing.SpinnerNumberModel(1, 1, totalPages, 1));
            SpinnerNumPaginas.setValue((int) currentPage);
             BtnVisuAlterarDados.setEnabled(false);
            BtnVisuAlterarDados.setEnabled(false);
            BtnExcluirPsicologo.setEnabled(false);
          

            LabelQtdePaginas.setText("de " + totalPages);
            getPageDataBusca(1, txtBusca.getText());
            int npag2=totalPages;
            if(totalPages==1){
            BtnAvancarPouco.setEnabled(false);
            BtnAvancarBastante.setEnabled(false);
            BtnVoltarPouco.setEnabled(false);
            BtnVoltarBastante.setEnabled(false);
        }
            if(npag1<npag2){
            BtnAvancarPouco.setEnabled(true);
            BtnAvancarBastante.setEnabled(true);
            
            
        }
        } else {
            PAGE_SIZE = (int) SpinnerLimite.getValue();
            getCount();

            SpinnerNumPaginas.setModel(new javax.swing.SpinnerNumberModel(1, 1, totalPages, 1));
            SpinnerNumPaginas.setValue((int) currentPage);

            LabelQtdePaginas.setText("de " + totalPages);
            getPageData(1);
            int npag2=totalPages;
            if(totalPages==1){
            BtnAvancarPouco.setEnabled(false);
            BtnAvancarBastante.setEnabled(false);
            BtnVoltarPouco.setEnabled(false);
            BtnVoltarBastante.setEnabled(false);
        }
            if(npag1<npag2){
            BtnAvancarPouco.setEnabled(true);
            BtnAvancarBastante.setEnabled(true);
            
            
        }
        }

    }//GEN-LAST:event_SpinnerLimiteStateChanged

    private void SpinnerNumPaginasStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_SpinnerNumPaginasStateChanged
        // TODO add your handling code here:
        if (txtBusca.getText() != "") {
            int pag1 = currentPage;
            getPageDataBusca((int) SpinnerNumPaginas.getValue(), txtBusca.getText());
            int pag2 = currentPage;
            if(pag2<pag1){
                BtnAvancarPouco.setEnabled(true);
                BtnAvancarBastante.setEnabled(true);
                    if (currentPage == 1) {
                        BtnVoltarPouco.setEnabled(false);
                        BtnVoltarBastante.setEnabled(false);  
                }
                    }
                    else{
                    {
                        BtnVoltarPouco.setEnabled(true);
                        BtnVoltarBastante.setEnabled(true);
                        if (currentPage == totalPages) {
                            BtnAvancarPouco.setEnabled(false);
                            BtnAvancarBastante.setEnabled(false);  
                }
                    }       
            }
             BtnVisuAlterarDados.setEnabled(false);
             BtnExcluirPsicologo.setEnabled(false);

        } else {

            getPageData((int) SpinnerNumPaginas.getValue());
        }
//        
    }//GEN-LAST:event_SpinnerNumPaginasStateChanged

    private void BtnHelpActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BtnHelpActionPerformed
        ModalHelp.setSize(540, 620);
        ModalHelp.setModal(true);
        ModalHelp.setVisible(false);
        ModalHelp.setVisible(false);
        ModalHelp.setLocationRelativeTo(null);
        ModalHelp.setVisible(true);
    }//GEN-LAST:event_BtnHelpActionPerformed

    private void txtBuscaKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtBuscaKeyPressed
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            if (txtBusca.getText() != "") {
                getCountBusca(txtBusca.getText());
                SpinnerNumPaginas.setValue(currentPage);
                LabelQtdePaginas.setText("de " + totalPages);
                getPageDataBusca(currentPage, txtBusca.getText());
            } else {
                getCount();
                SpinnerNumPaginas.setValue(currentPage);
                LabelQtdePaginas.setText("de " + totalPages);
                getPageData(currentPage);
            }
        }
    }//GEN-LAST:event_txtBuscaKeyPressed

    private void btnBuscarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBuscarActionPerformed
        // TODO add your handling code here:

        //System.out.println(JCBAtributo.getSelectedIndex());
        getCountBusca(txtBusca.getText());
        SpinnerNumPaginas.setValue(1);
        LabelQtdePaginas.setText("de " + totalPages);
        getPageDataBusca(1, txtBusca.getText());
    }//GEN-LAST:event_btnBuscarActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jButton2ActionPerformed

    private void JCBdeletadosActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_JCBdeletadosActionPerformed
        // TODO add your handling code here:
        if (JCBdeletados.getSelectedIndex() == 0) {
            btnRestaurar.setVisible(false);
        } else {
            btnRestaurar.setVisible(true);
            btnRestaurar.setEnabled(false);
        }
        if (txtBusca.getText() != "") {

            getCountBusca(txtBusca.getText());
            SpinnerNumPaginas.setValue(currentPage);
            LabelQtdePaginas.setText("de " + totalPages);
            getPageDataBusca(currentPage, txtBusca.getText());
        } else {
            getCount();
            SpinnerNumPaginas.setValue(currentPage);
            LabelQtdePaginas.setText("de " + totalPages);
            getPageData(currentPage);
        }
    }//GEN-LAST:event_JCBdeletadosActionPerformed

    private void btnRestaurarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnRestaurarActionPerformed
        // TODO add your handling code here:

        if (JTPsicologos.getSelectedRow() != -1) {

            int modelRow = JTPsicologos.convertRowIndexToModel(JTPsicologos.getSelectedRow());
            int value = (Integer) JTPsicologos.getModel().getValueAt(modelRow, 0);

            PsicologoDAO dao = new PsicologoDAO();
            ViewsDAO vwdao = new ViewsDAO();
            Psicologo p = dao.ReadPsicologo(value);
            p.setCodPsicologo(value);
            if (JCBdeletados.getSelectedIndex() == 1) {
                p.setDeletado(false);
            }
            boolean status = Restaurar.RestaurarPsicologos(p.getCodPsicologo());
            if (status) {

                
                if (txtBusca.getText() != "") {

                    getCountBusca(txtBusca.getText());
                    SpinnerNumPaginas.setValue(currentPage);
                    LabelQtdePaginas.setText("de " + totalPages);
                    getPageDataBusca(currentPage, txtBusca.getText());
                } else {
                    getCount();
                    SpinnerNumPaginas.setValue(currentPage);
                    LabelQtdePaginas.setText("de " + totalPages);
                    getPageData(currentPage);
                }
            } else {
                Deletar.DPsicologo(p);
                JOptionPane.showMessageDialog(this, "Ocorreu um erro ao restaurar o Psicologo, tente novamente!", "ERRO!", JOptionPane.ERROR_MESSAGE);
            }
        }

    }//GEN-LAST:event_btnRestaurarActionPerformed

    private void chckMostrarSenha1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_chckMostrarSenha1MouseClicked
        if (chckMostrarSenha1.isSelected()) {
            txtSenha1.setEchoChar((char) 0);
            txtConfirmarSenha1.setEchoChar((char) 0);
        } else {
            txtSenha1.setEchoChar('*');
            txtConfirmarSenha1.setEchoChar('*');
        }
    }//GEN-LAST:event_chckMostrarSenha1MouseClicked

    private void BtnAlterarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BtnAlterarActionPerformed

        Psicologo p = new Psicologo();
        PsicologoDAO dao = new PsicologoDAO();
        if (!Validar.vCamposVaziosSenha(this, txtSenha1, txtConfirmarSenha1)) {
            String senha = new String(txtSenha1.getPassword());
            String csenha = new String(txtConfirmarSenha1.getPassword());
            if (senha.equals(csenha)) {
                p.setSenha(senha);
                p.setCodPsicologo(this.codigopsicologo);
                UIManager.put("OptionPane.yesButtonText", "Sim");
                UIManager.put("OptionPane.noButtonText", "Não");

                int result = JOptionPane.showConfirmDialog(this, "Alterar Usuário Senha??", "Confirmar Alteração", JOptionPane.YES_NO_OPTION);

                if (result == 0) {
                    dao.UpdateSenha(p);
                    //JOptionPane.showMessageDialog(this, "Usuário e Senha Atualizado com Sucesso!");
                    //TelaLogin tl = new TelaLogin();
                    //tl.setVisible(true);
                    ModalAlterarSenha.dispose();
                }
            } else {
                JOptionPane.showMessageDialog(this, "As senhas inseridas são diferentes!");

            }
        }
        // TODO add your handling code here:
    }//GEN-LAST:event_BtnAlterarActionPerformed

    private void BtnCancelar7ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BtnCancelar7ActionPerformed
        ModalAlterarSenha.dispose();
    }//GEN-LAST:event_BtnCancelar7ActionPerformed

    private void txtNome3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtNome3ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtNome3ActionPerformed

    private void txtNome3KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtNome3KeyTyped
        char c = evt.getKeyChar();
        if (Character.isDigit(c)) {
            evt.consume();
        }
    }//GEN-LAST:event_txtNome3KeyTyped

    private void txtCRP1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtCRP1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtCRP1ActionPerformed

    private void txtCRP1KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtCRP1KeyTyped
        char c = evt.getKeyChar();
        if (!Character.isDigit(c)) {
            evt.consume();
        }
    }//GEN-LAST:event_txtCRP1KeyTyped

    private void TxtTelefone6KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_TxtTelefone6KeyTyped
        char c = evt.getKeyChar();
        if (!Character.isDigit(c)) {
            evt.consume();
        }
    }//GEN-LAST:event_TxtTelefone6KeyTyped

    private void BtnCadastrarPsicologo1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BtnCadastrarPsicologo1ActionPerformed
        // TODO add your handling code here:
        boolean dadosvalidos = true;

        Psicologo p = new Psicologo();
        PsicologoDAO dao = new PsicologoDAO();
        Telefone tf = new Telefone();
        Telefone tf2 = new Telefone();
        TelefoneDAO tfdao = new TelefoneDAO();
        String msg = "Existem campos com formatos Inválidos\n\nFavor Verificar os campos:";

        if (!Validar.vCamposVaziosManterPSI(this, txtNome3, txtEmail2, txtCRP1, TxtTelefone6)) {
            if (Validar.vNome(txtNome3.getText())) {
                p.setNome_completo(txtNome3.getText());
            } else {
                dadosvalidos = false;
                msg += "\nNome Invalido: " + txtNome3.getText();
            }

            if (Validar.vEmail(txtEmail2.getText())) {
                p.setEmail(txtEmail2.getText());
            } else {
                dadosvalidos = false;
                msg += "\nEmail Invalido: " + txtEmail2.getText();
            }

            if (Validar.vCRP(txtCRP1.getText())) {
                p.setCRP(txtCRP1.getText());
            } else {
                dadosvalidos = false;
                msg += "\nCPF Invalido: " + txtCRP1.getText();
            }

            p.setCodPsicologo(this.codigopsicologo);

            if (Validar.vTelefone(TxtTelefone6.getText())) {
                tf.setNumero(TxtTelefone6.getText());
            } else {
                dadosvalidos = false;
                msg += "\nNúmero de Telefone Invalido: " + TxtTelefone6.getText() + "\nO Número deve ser no formato xxxxxxxxxxx";
            }

            if (!TxtTelefone7.getText().isEmpty()) {
                if (Validar.vTelefone(TxtTelefone7.getText())) {
                    tf2.setNumero(TxtTelefone7.getText());
                } else {
                    dadosvalidos = false;
                    msg += "\nNúmero de Telefone 2 Invalido: " + TxtTelefone7.getText() + "\nO Número deve ser no formato xxxxxxxxxxx";
                }
            }
            if (!TxtTelefone7.getText().isEmpty()) {
                if (Validar.vTelefone(TxtTelefone7.getText())) {
                    tf.setNumero(TxtTelefone7.getText());
                } else {
                    dadosvalidos = false;
                    msg += "\nNúmero de Telefone 2 Invalido: " + TxtTelefone7.getText() + "\nO Número deve ser no formato xxxxxxxxxxx";
                }
            }
            if (dadosvalidos) {

                if (dao.UpdatePsicologSemLogin(p)) {

                    p = dao.ReadPsicologo(p.getCRP());

                    List<Telefone> t = tfdao.ReadTPsicologo(p.getCodPsicologo());
                    t.get(0).setNumero(TxtTelefone6.getText());
                    if (tfdao.UpdateTPsicologo(t.get(0))) {

                        if (t.size() == 2) {
                            t.get(1).setNumero(TxtTelefone7.getText());
                            tfdao.UpdateTPsicologo(t.get(1));

                        }
                        JOptionPane.showMessageDialog(this, "Psicologo: " + p.getNome_completo() + " Salvo com sucesso");

                        if (txtBusca.getText() != "") {
                            getCountBusca(txtBusca.getText());
                            SpinnerNumPaginas.setValue(currentPage);
                            LabelQtdePaginas.setText("de " + totalPages);
                            getPageDataBusca(currentPage, txtBusca.getText());
                        } else {
                            getCount();
                            SpinnerNumPaginas.setValue(currentPage);
                            LabelQtdePaginas.setText("de " + totalPages);
                            getPageData(currentPage);
                        }
                        this.clearAlterar();
                        ModalAlterarPsicologo.dispose();

                    }

                }

                /*   if(telefones){
                    Telefone tf = new Telefone();
                    TelefoneDAO tfdao = new TelefoneDAO();
                    tf.setNumero(TxtTelefone.getText());
                    p = dao.ReadPaciente(p.getCPF());
                    tf.setPaciente(p);
                    tfdao.CreatePc(tf);
                }
                 */
                //mostrar mensagem de sucesso
                // JOptionPane.showMessageDialog(null,"Paciente Cadastrado com Sucesso!");
                if (txtBusca.getText() != "") {
                    getCountBusca(txtBusca.getText());
                    SpinnerNumPaginas.setValue(currentPage);
                    LabelQtdePaginas.setText("de " + totalPages);
                    getPageDataBusca(currentPage, txtBusca.getText());
                } else {
                    getCount();
                    SpinnerNumPaginas.setValue(currentPage);
                    LabelQtdePaginas.setText("de " + totalPages);
                    getPageData(currentPage);
                }
            } else {
                JOptionPane.showMessageDialog(this, msg);
            }
        }
    }//GEN-LAST:event_BtnCadastrarPsicologo1ActionPerformed

    private void BtnCancelar6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BtnCancelar6ActionPerformed
        this.clearAlterar();
        ModalAlterarPsicologo.dispose();
    }//GEN-LAST:event_BtnCancelar6ActionPerformed

    private void TxtTelefone7KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_TxtTelefone7KeyTyped
        char c = evt.getKeyChar();
        if (!Character.isDigit(c)) {
            evt.consume();
        }
    }//GEN-LAST:event_TxtTelefone7KeyTyped

    private void LabelEsqueciSenhaMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_LabelEsqueciSenhaMouseClicked
        // TODO add your handling code here:
        ModalAlterarSenha.setSize(367, 475);
        ModalAlterarSenha.setModal(true);
        //            readpsicologo();
        ModalAlterarSenha.setLocationRelativeTo(null);
        ModalAlterarSenha.setVisible(true);
    }//GEN-LAST:event_LabelEsqueciSenhaMouseClicked

    private void LabelEsqueciSenhaMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_LabelEsqueciSenhaMouseEntered
        LabelEsqueciSenha.setForeground(new java.awt.Color(255, 0, 255));
    }//GEN-LAST:event_LabelEsqueciSenhaMouseEntered

    private void LabelEsqueciSenhaMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_LabelEsqueciSenhaMouseExited
        LabelEsqueciSenha.setForeground(new java.awt.Color(0, 0, 0));
    }//GEN-LAST:event_LabelEsqueciSenhaMouseExited

    private void LabelEsqueciSenhaMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_LabelEsqueciSenhaMouseReleased
        // TODO add your handling code here:
    }//GEN-LAST:event_LabelEsqueciSenhaMouseReleased

    private void LabelEsqueciSenhaKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_LabelEsqueciSenhaKeyPressed
        // TODO add your handling code here:
    }//GEN-LAST:event_LabelEsqueciSenhaKeyPressed

    private void txtNome1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtNome1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtNome1ActionPerformed

    private void txtNome1KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtNome1KeyTyped
        char c = evt.getKeyChar();
        if (Character.isDigit(c)) {
            evt.consume();
        }
    }//GEN-LAST:event_txtNome1KeyTyped

    private void txtCRPActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtCRPActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtCRPActionPerformed

    private void txtCRPKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtCRPKeyTyped
        char c = evt.getKeyChar();
        if (!Character.isDigit(c)) {
            evt.consume();
        }
    }//GEN-LAST:event_txtCRPKeyTyped

    private void chckMostrarSenhaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_chckMostrarSenhaActionPerformed
        if (chckMostrarSenha.isSelected()) {
            txtSenha.setEchoChar((char) 0);
            txtConfirmarSenha.setEchoChar((char) 0);
        } else {
            txtSenha.setEchoChar('*');
            txtConfirmarSenha.setEchoChar('*');
        }
    }//GEN-LAST:event_chckMostrarSenhaActionPerformed

    private void TxtTelefone1KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_TxtTelefone1KeyTyped
        char c = evt.getKeyChar();
        if (!Character.isDigit(c)) {
            evt.consume();
        }
    }//GEN-LAST:event_TxtTelefone1KeyTyped

    private void BtnCadastrarPsicologoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BtnCadastrarPsicologoActionPerformed
        // TODO add your handling code here:
        boolean dadosvalidos = true;

        Psicologo p = new Psicologo();
        PsicologoDAO dao = new PsicologoDAO();
        Telefone tf = new Telefone();
        Telefone tf2 = new Telefone();
        TelefoneDAO tfdao = new TelefoneDAO();
        String msg = "Existem campos com formatos Inválidos\n\nFavor Verificar os campos:";

        if (txtSenha.getText().equals(txtConfirmarSenha.getText())) {
            if (!Validar.vCamposVaziosPSI(this, txtNome1, txtEmail1, txtCRP, txtLogin, txtSenha, TxtTelefone1)) {
                if (Validar.vNome(txtNome1.getText())) {
                    p.setNome_completo(txtNome1.getText());
                } else {
                    dadosvalidos = false;
                    msg += "\nNome Invalido: " + txtNome1.getText();
                }

                if (Validar.vEmail(txtEmail1.getText())) {
                    p.setEmail(txtEmail1.getText());
                } else {
                    dadosvalidos = false;
                    msg += "\nEmail Invalido: " + txtEmail1.getText();
                }

                if (Validar.vCRP(txtCRP.getText())) {
                    p.setCRP(txtCRP.getText());
                } else {
                    dadosvalidos = false;
                    msg += "\nCRP Invalido: " + txtCRP.getText();
                }

                p.setLogin(txtLogin.getText());
                p.setSenha(txtSenha.getText());

                if (Validar.vTelefone(TxtTelefone1.getText())) {
                    tf.setNumero(TxtTelefone1.getText());
                } else {
                    dadosvalidos = false;
                    msg += "\nNúmero de Telefone Invalido: " + TxtTelefone1.getText() + "\nO Número deve ser no formato xxxxxxxxxxx";
                }
                if (!TxtTelefone5.getText().isEmpty()) {
                    if (Validar.vTelefone(TxtTelefone5.getText())) {
                        tf2.setNumero(TxtTelefone5.getText());
                    } else {
                        dadosvalidos = false;
                        msg += "\nNúmero de Telefone 2 Invalido: " + TxtTelefone5.getText() + "\nO Número deve ser no formato xxxxxxxxxxx";
                    }
                }

                if (dadosvalidos) {
                    UIManager.put("OptionPane.yesButtonText", "Sim");
                    UIManager.put("OptionPane.noButtonText", "Não");

                    if (dao.Create(p)) {

                        p = dao.ReadPsicologo(p.getCRP());
                        tf.setPsicologo(p);

                        if (tfdao.CreatePsi(tf)) {
                            if (!TxtTelefone5.getText().isEmpty()) {
                                tf2.setPsicologo(p);
                                tfdao.CreatePsi(tf2);
                            }
                            if (txtBusca.getText() != "") {
                                getCountBusca(txtBusca.getText());
                                SpinnerNumPaginas.setValue(currentPage);
                                LabelQtdePaginas.setText("de " + totalPages);
                                getPageDataBusca(currentPage, txtBusca.getText());
                            } else {
                                getCount();
                                SpinnerNumPaginas.setValue(currentPage);
                                LabelQtdePaginas.setText("de " + totalPages);
                                getPageData(currentPage);
                            }
                            this.clearNovo();
                            ModalCadastrarPsicologo.dispose();
                        } else {
                            dao.Delete(p);
                        }

                    }


                    /*   if(telefones){
                        Telefone tf = new Telefone();
                        TelefoneDAO tfdao = new TelefoneDAO();
                        tf.setNumero(TxtTelefone.getText());
                        p = dao.ReadPaciente(p.getCPF());
                        tf.setPaciente(p);
                        tfdao.CreatePc(tf);
                    }
                     */
                    //mostrar mensagem de sucesso
                    // JOptionPane.showMessageDialog(null,"Paciente Cadastrado com Sucesso!");
                } else {
                    JOptionPane.showMessageDialog(this, msg);
                }

            }
        } else {
            JOptionPane.showMessageDialog(this, "As senhas são diferentes");
        }
    }//GEN-LAST:event_BtnCadastrarPsicologoActionPerformed

    private void BtnCancelar5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BtnCancelar5ActionPerformed
        this.clearNovo();
        ModalCadastrarPsicologo.dispose();
    }//GEN-LAST:event_BtnCancelar5ActionPerformed

    private void TxtTelefone5KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_TxtTelefone5KeyTyped
        char c = evt.getKeyChar();
        if (!Character.isDigit(c)) {
            evt.consume();
        }
    }//GEN-LAST:event_TxtTelefone5KeyTyped

    private void BtnNovoPsicologoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BtnNovoPsicologoActionPerformed
        // TODO add your handling code here:
        ModalCadastrarPsicologo.setSize(458, 724);
        ModalCadastrarPsicologo.setModal(true);
        ModalCadastrarPsicologo.setLocationRelativeTo(null);
        ModalCadastrarPsicologo.setVisible(true);
    }//GEN-LAST:event_BtnNovoPsicologoActionPerformed

    private void BtnVisuAlterarDadosActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BtnVisuAlterarDadosActionPerformed

        if (JTPsicologos.getSelectedRow() != -1) {

            int modelRow = JTPsicologos.convertRowIndexToModel(JTPsicologos.getSelectedRow());
            int value = (Integer) JTPsicologos.getModel().getValueAt(modelRow, 0);
            this.codigopsicologo = value;

            ModalAlterarPsicologo.setSize(478, 612);
            ModalAlterarPsicologo.setModal(true);
            readpsicologo(this.codigopsicologo);
            ModalAlterarPsicologo.setLocationRelativeTo(null);
            ModalAlterarPsicologo.setVisible(true);

            //            VisuPsicologoADM mp = new VisuPsicologoADM(value);
            //            //Util.SizeJanela(mp);
            //            mp.setVisible(true);
            //            this.dispose();
            //            int modelRow = JTPsicologos.convertRowIndexToModel(JTPsicologos.getSelectedRow());
            //            int value = (Integer) JTPsicologos.getModel().getValueAt(modelRow, 0);
            //            this.codigopaciente = value;
            //            PacienteDAO dao = new PacienteDAO();
            //            ViewsDAO vwdao = new ViewsDAO();
            //            Paciente p = dao.ReadPaciente(codigopaciente);
            //            Vw_TelefonesPacientes v = new Vw_TelefonesPacientes();
            //            v = vwdao.ReadTelefonesPacientes(codigopaciente);
            //            txtNome2.setText(p.getNome_Completo());
            //            Date date = (Date) p.getDataNasc();
            //
            //            LocalDate localDate = date.toInstant().atZone( ZoneId.systemDefault() ).toLocalDate();
            //            DataNasc3.setDate(date.toLocalDate());
            //            DataNasc1.setDate((LocalDate) p.getDataNasc());
            //            Sexo2.setSelectedItem(p.getSexo());
            //            estadocivil2.setSelectedItem(p.getEstadoCivil());
            //            TxtCidade2.setText(p.getCidade());
            //            txtCPF2.setText(p.getCPF());
            //            TxtEndereco2.setText(p.getEndereco());
            //            TxtProfissao2.setText(p.getProfissao());
            //            TxtReligiao2.setText(p.getReligiao());
            //            TxtEscolaridade2.setText(p.getEscolaridade());
            //            String fones = null;
            //            String[] fones2 = null;
            //            fones = v.getTelefone().getNumero();
            //            if (fones.contains(",")) {
            //                fones2 = fones.split(",");
            //                TxtTelefone3.setText(fones2[0]);
            //                TxtTelefone4.setText(fones2[1]);
            //            } else {
            //                TxtTelefone3.setText(fones);
            //                TxtTelefone4.setText("");
            //            }
            //
            //            txtEmail13.setText(p.getEmail());
            //            LabelMsg.setVisible(false);
            //            DataNasc3.setFont(new Font("Tahoma", Font.BOLD, 18));
            //            ModalAlterar.setSize(950, 950);
            //            ModalAlterar.setModal(true);
            //            ModalAlterar.setLocationRelativeTo(null);
            //            ModalAlterar.setVisible(true);
            //
        } else {
            JOptionPane.showMessageDialog(this, "Selecione um Psicologo para alterar", "ERRO!", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_BtnVisuAlterarDadosActionPerformed

    private void BtnExcluirPsicologoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BtnExcluirPsicologoActionPerformed
        if (JTPsicologos.getSelectedRow() != -1) {
            int modelRow = JTPsicologos.convertRowIndexToModel(JTPsicologos.getSelectedRow());
            int value = (Integer) JTPsicologos.getModel().getValueAt(modelRow, 0);

            Psicologo p = new Psicologo();

            p.setCodPsicologo(value);
            int result = JOptionPane.showConfirmDialog(this, "Você tem certeza que deseja excluir este Psicólogo?\nO Acesso ao sistema será revogado, Prosseguir?", "Confirmar Exclusão?", JOptionPane.YES_NO_OPTION, JOptionPane.WARNING_MESSAGE);

            if (result == 0) {
                boolean status = Deletar.DPsicologo(p);
                //limpar a tela
                if (!status) {
                    Restaurar.RestaurarPsicologos(p.getCodPsicologo());
                    JOptionPane.showMessageDialog(this, "Houve um problema ao Excluir o Psicologo, tente novamente!", "ERRO!", JOptionPane.ERROR_MESSAGE);

                }

                //mostrar mensagem de sucesso
                // JOptionPane.showMessageDialog(null,"Paciente Cadastrado com Sucesso!");
                if (txtBusca.getText() != "") {
                    getCountBusca(txtBusca.getText());
                    SpinnerNumPaginas.setValue(currentPage);
                    LabelQtdePaginas.setText("de " + totalPages);
                    getPageDataBusca(currentPage, txtBusca.getText());
                } else {
                    getCount();
                    SpinnerNumPaginas.setValue(currentPage);
                    LabelQtdePaginas.setText("de " + totalPages);
                    getPageData(currentPage);
                }

            }
        } else {
            JOptionPane.showMessageDialog(this, "Selecione um Psicologo para alterar", "ERRO!", JOptionPane.ERROR_MESSAGE);

        }
    }//GEN-LAST:event_BtnExcluirPsicologoActionPerformed

    private void BtnInicioActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BtnInicioActionPerformed
        TelaPrincipalAdm mp1 = new TelaPrincipalAdm();
        Util.SizeJanela(mp1);
        this.dispose();
    }//GEN-LAST:event_BtnInicioActionPerformed

    private void BtnManterPacienteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BtnManterPacienteActionPerformed
        M mp1 = new M();
        Util.SizeJanela(mp1);
        this.dispose();
    }//GEN-LAST:event_BtnManterPacienteActionPerformed

    private void BtnManterConsultaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BtnManterConsultaActionPerformed
        ManterConsultasAdm mc = new ManterConsultasAdm();
        Util.SizeJanela(mc);
        this.dispose();
    }//GEN-LAST:event_BtnManterConsultaActionPerformed

    private void BtnManterPsicologoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BtnManterPsicologoActionPerformed
        ManterPsiAdm mp = new ManterPsiAdm();
        mp.setVisible(true);
        Util.SizeJanela(mp);
        this.dispose();
    }//GEN-LAST:event_BtnManterPsicologoActionPerformed

    private void BtnSairActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BtnSairActionPerformed
        TelaLogin tl = new TelaLogin();
        tl.setVisible(true);
        this.dispose();
    }//GEN-LAST:event_BtnSairActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(ManterPsiAdm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(ManterPsiAdm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(ManterPsiAdm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(ManterPsiAdm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>


        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new ManterPsiAdm().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton BtnAlterar;
    private javax.swing.JButton BtnAvancarBastante;
    private javax.swing.JButton BtnAvancarPouco;
    private javax.swing.JButton BtnCadastrarPsicologo;
    private javax.swing.JButton BtnCadastrarPsicologo1;
    private javax.swing.JButton BtnCancelar5;
    private javax.swing.JButton BtnCancelar6;
    private javax.swing.JButton BtnCancelar7;
    private javax.swing.JButton BtnExcluirPsicologo;
    private javax.swing.JButton BtnHelp;
    private javax.swing.JButton BtnInicio;
    private javax.swing.JButton BtnManterConsulta;
    private javax.swing.JButton BtnManterPaciente;
    private javax.swing.JButton BtnManterPsicologo;
    private javax.swing.JButton BtnNovoPsicologo;
    private javax.swing.JButton BtnSair;
    private javax.swing.JButton BtnVisuAlterarDados;
    private javax.swing.JButton BtnVoltarBastante;
    private javax.swing.JButton BtnVoltarPouco;
    private javax.swing.JComboBox<String> JCBdeletados;
    private javax.swing.JTable JTPsicologos;
    private javax.swing.JLabel LabelConfirmarSenha;
    private javax.swing.JLabel LabelEsqueciSenha;
    private javax.swing.JLabel LabelLimite;
    private javax.swing.JLabel LabelPagina;
    private javax.swing.JLabel LabelQtdePaginas;
    private javax.swing.JLabel LabelTelefone2;
    private javax.swing.JLabel LabelTelefone3;
    private javax.swing.JLabel LableCadstrarNovoPsicologo;
    private javax.swing.JLabel LableCadstrarNovoPsicologo1;
    private javax.swing.JDialog ModalAlterarPsicologo;
    private javax.swing.JDialog ModalAlterarSenha;
    private javax.swing.JDialog ModalCadastrarPsicologo;
    private javax.swing.JDialog ModalHelp;
    private javax.swing.JPanel PainelMenu;
    private javax.swing.JPanel PainelMeusDados;
    private javax.swing.JPanel PainelPaginacao;
    private javax.swing.JSpinner SpinnerLimite;
    private javax.swing.JSpinner SpinnerNumPaginas;
    private javax.swing.JTextField TxtTelefone1;
    private javax.swing.JTextField TxtTelefone5;
    private javax.swing.JTextField TxtTelefone6;
    private javax.swing.JTextField TxtTelefone7;
    private javax.swing.JButton btnBuscar;
    private javax.swing.JButton btnRestaurar;
    private javax.swing.JCheckBox chckMostrarSenha;
    private javax.swing.JCheckBox chckMostrarSenha1;
    private javax.swing.JButton jButton2;
    private LIB.JEImagePanel jEImagePanel1;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel21;
    private javax.swing.JLabel jLabel22;
    private javax.swing.JLabel jLabel23;
    private javax.swing.JLabel jLabel24;
    private javax.swing.JLabel jLabel26;
    private javax.swing.JLabel jLabel29;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JPanel jPanel7;
    private javax.swing.JPanel jPanel8;
    private javax.swing.JPanel jPanel9;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel labeltelefone;
    private javax.swing.JLabel labeltelefone1;
    private javax.swing.JTextField txtBusca;
    private javax.swing.JTextField txtCRP;
    private javax.swing.JTextField txtCRP1;
    private javax.swing.JPasswordField txtConfirmarSenha;
    private javax.swing.JPasswordField txtConfirmarSenha1;
    private javax.swing.JTextField txtEmail1;
    private javax.swing.JTextField txtEmail2;
    private javax.swing.JTextField txtLogin;
    private javax.swing.JTextField txtNome1;
    private javax.swing.JTextField txtNome3;
    private javax.swing.JPasswordField txtSenha;
    private javax.swing.JPasswordField txtSenha1;
    // End of variables declaration//GEN-END:variables
}
